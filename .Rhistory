x <- vector(1,2,3)
x <- vector("numeric", length = 3)
x[1] <- 1
x[3] <- 3
x[[2]] <- NULL
x[[1]] <- NULL
x$[[1]] <- NULL
x[[1]]
x[[2]]
x[[3]]
x[[3]] <- NULL
m <- matrix(2,3)
m
m <- matrix(nrow = 2, ncol = 3)
m
m[2,2] <- 4
m
m[1,2] <- 3
m
m <- 1:6
m
mode(m)
class(m)
q()
install.packages(c("DBI", "lubridate", "openssl", "pillar", "rmarkdown", "tidyselect", "yaml"))
q()
q()
install.packages("yaml")
q()
library(XBRL)
install.packages("XBRL")
# =====================
#  Parse Walmart 10-K
# (2016, FYE 1/31/2017)
#  Download 1/15/2018
# =====================
library(devtools)
install_github("bergant/finstr")
library(XBRL)
library(finstr)
library(devtools)
options(scipen = 999)
options(stringsAsFactors = FALSE)
# XBRL instance file - Walmart 2016 (FYE 1/17) 10-K
inst <- "https://www.sec.gov/Archives/edgar/data/104169/000010416917000021/wmt-20170131.xml"
# Process XBRL file
xbrl_wmt2017 <- xbrlDoAll(inst)
# Get financial statements
st2017 <- xbrl_get_statements(xbrl_wmt2017)
# Get Balance Sheet
balSheet <- st2017$ConsolidatedBalanceSheets
# Save Financial Data
saveRDS(st2017, "st2017")
saveRDS(xbrl_data_wmt2017, "xbrl2017")
View(balSheet)
View(balSheet)
q()
q()
q()
q()
q()
q()
q()
q()
setwd("~/code/r/projectGithub/retail4BA")
# Read in Store Size ('General info') worksheet
ss <- read_xlsx("Analysis-by-cohorts-vintage-example.xlsx", sheet = "General info", skip = 2)
library(dplyr)
library(readxl)
library(ggplot2)
# Read in Store Size ('General info') worksheet
ss <- read_xlsx("Analysis-by-cohorts-vintage-example.xlsx", sheet = "General info", skip = 2)
View(ss)
View(ss)
# Read in 'Sales by Store' worksheet
sbs <- read_xlsx("Analysis-by-cohorts-vintage-example.xlsx", sheet = "Sales by Store", skip = 2)
View(sbs)
View(ss)
# Calculate Sales Density for Store #1132 in Breslau
sbs$`Net sales In EUR` / sbs$`Space In sq m`
View(sbs)
colnames(sbs)
h1 <- colnames(sbs)
make.names(h1)
gsub("..",".",h1)
gsub("\.\.","\.",h1)
gsub("\\.\\.","\\.",h1)
h1 <- make.names(h1)
h1
gsub("\\.\\.","\\.",h1)
h1 <- colnames(sbs) %>%
make.names() %>%
gsub("\\.\\.","\\.")
colnames(sbs) # %>%
h1 <- colnames(sbs) # %>%
h1 <- colnames(sbs) %>%
make.names() # %>%
h1 <- colnames(sbs) %>%
make.names() %>%
gsub("\\.\\.","\\.")
h1 <- colnames(sbs) %>%
make.names()
h1 <- gsub("\\.\\.","\\.",h1)
names(sbs) <- h1
?make.names
# Create valid column names for 'Store Size' table
h1 <- colnames(ss) %>%
make.names()
names(ss) <- gsub("\\.\\.","\\.",h1)
rm(h1)
# Calculate Sales Density for Store #1132 in Breslau
sbs$Net.sales.In.EUR / sbs$Space.In.sq.m
dim(ss)
storeNum <- length(ss)
storeNum <- nrow(ss)
# Number of stores
nrow(ss)
# Number of stores from 'Store Size' table
storeNum <- nrow(ss)
# Store Numbers unique?
unique(storeNum)
# Sales by Store table describes same stores?
unique(sbs$Store.Number.new)
# Sales by Store table describes same stores?
count(unique(sbs$Store.Number.new))
# Number of stores from 'Store Size' table
count(ss$Store.Number.new)
# Number of stores from 'Store Size' table
ss %>%
count(Store.Number.new)
# Number of stores from 'Store Size' table
nrows(ss)
# Number of stores from 'Store Size' table
nrow(ss)
# Store Numbers unique? yes
unique(ss$Store.Number.new)
# Store Numbers unique? yes
count(unique(ss$Store.Number.new))
# Store Numbers unique? yes
storeNum <- unique(ss$Store.Number.new)
length(storeNum)
# Sales by Store table describes same stores?
length(unique(sbs$Store.Number.new))
# Sales by Store table describes same stores?
storeNum2 <- unique(sbs$Store.Number.new)
setdiff(storeNum,storeNum2)
length(storeNum2)
# ----------------------------------
# Calculate Sales Density for Store #1132 in Breslau
s1132 <- ss[(Store.Number.new == 1132),]
# ----------------------------------
# Calculate Sales Density for Store #1132 in Breslau
s1132 <- ss[(ss$Store.Number.new == 1132),]
s1132$Net.sales.In.EUR / s1132$Space.In.sq.m
s1132
# ----------------------------------
# Calculate Sales Density for Store #1132 in Breslau
# in 2010
s1132 <- sbs[(sbs$Store.Number.new == 1132),]
# ----------------------------------
# Calculate Sales Density for Store #1132 in Breslau
# in 2010
s1132 <- sbs[(sbs$Store.Number.new == 1132 & sbs$Year == 2010),]
s1132$Net.sales.In.EUR / s1132$Space.In.sq.m
round(s1132$Net.sales.In.EUR / s1132$Space.In.sq.m)
q()
